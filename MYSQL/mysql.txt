
https://www.mysqltutorial.org/

1> Load sample database

#mysql -u root -p
mysql> source c:\temp\mysqlsampledatabase.sql

or via adminer.php import data


2> SELECT query

SELECT select_list
FROM table_name;

FROM -> SELECT

#SELECT lastname FROM employees;
#SELECT lastName,firstName,jobTitle FROM employees;
#SELECT * from employees;

3>ORDER BY
SELECT 
   select_list
FROM 
   table_name
ORDER BY 
   column1 [ASC|DESC], 
   column2 [ASC|DESC],
   ...;

 FROM -> SELECT -> ORDER BY
 

#SELECT contactLastname, contactFirstname FROM customers ORDER BY contactLastName;
#SELECT contactLastname, contactFirstname FROM customers ORDER BY contactLastName DESC;
#SELECT contactLastname, contactFirstname FROM customers ORDER BY contactLastName DESC, contactFirstName ASC;

Expression AS alais
#SELECT orderNumber, orderLineNumber, quantityOrdered * priceEach AS subtotal FROM orderdetails ORDER BY subtotal DESC;
sort data using a custom list
Field get ordered as  1,2,3
#SELECT orderNumber, status FROM orders ORDER BY FIELD(status,'In Process','On Hold',   'Cancelled', 'Resolved', 'Disputed', 'Shipped');

SELECT 
    select_list
FROM
    table_name
WHERE
    search_condition;

The search_condition is a combination of one or more predicates using the logical operator AND, OR and NOT.

In MySQL, a predicate is a Boolean expression that evaluates to TRUE, FALSE, or UNKNOWN. True will be in final data set.
FROM>WHERE>SELECT>ORDER BY

SELECT lastname, firstname, jobtitle FROM employees WHERE jobtitle = 'Sales Rep';
SELECT lastname, firstname, jobtitle, officeCode FROM employees WHERE jobtitle = 'Sales Rep' AND officeCode = 1;
SELECT lastName, firstName, jobTitle, officeCode FROM employees WHERE jobtitle = 'Sales Rep' OR officeCode = 1 ORDER BY officeCode , jobTitle;
SELECT firstName, lastName, officeCode FROM employees WHERE officeCode BETWEEN 1 AND 3 ORDER BY officeCode;

The LIKE operator evaluates to TRUE if a value matches a specified pattern. To form a pattern, you use % and _ wildcards. The % wildcard matches any string of zero or more characters while the _ wildcard matches any single character.
SELECT firstName, lastName FROM employees WHERE lastName LIKE '%son'ORDER BY firstName;


The IN operator returns TRUE if a value matches any value in a list.value IN (value1, value2,...)

SELECT firstName, lastName, officeCode FROM employees WHERE officeCode IN (1 , 2, 3) ORDER BY officeCode;
Using MySQL WHERE  clause with the IS NULL operator.NULL is special missing vaule and not zero
SELECT lastName, firstName, reportsTo FROM employees WHERE reportsTo IS NULL;


Operator	Description
=	Equal to. You can use it with almost any data types.
<> or !=	Not equal to
<	Less than. You typically use it with numeric and date/time data types.
>	Greater than.
<=	Less than or equal to
>=	Greater than or equal to

SELECT lastname, firstname, officeCode FROM employees WHERE officecode >= 5;
SELECT lastname, firstname, officeCode FROM employees WHERE officecode <= 4;

Distinct
SELECT lastname FROM employees ORDER BY lastname;
SELECT DISTINCT lastname FROM employees ORDER BY lastname;







